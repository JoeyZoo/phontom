<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zj.videoservice.mapper.OutdoorVideoMapper">
    <!--幻灯片展示前4个最多播放量的视频-->
    <select id="listSlides" resultType="VideoVO">
        SELECT
            ov.id,
            ov.title,
            ov.video_source_id,
            ov.cover,
            ov.is_free,
            COUNT( ovpr.video_id ) AS playNum
        FROM
            outdoor_video ov
            LEFT JOIN outdoor_video_play_record ovpr ON ov.id = ovpr.video_id
        WHERE
            ov.is_deleted = 0
        GROUP BY
            ov.id
        ORDER BY
            playNum DESC
            LIMIT 4;
    </select>

    <!--最新发布-->
    <select id="listAllVideos" resultType="VideoVO">
        SELECT
            ov.id,
            ov.title,
            ov.video_source_id,
            ov.cover,
            ov.is_free,
            ov.gmt_create
        FROM
            outdoor_video ov
        WHERE
            ov.is_deleted = 0
        ORDER BY
            ov.gmt_create DESC
            LIMIT 4;<!--首先按最新时间排序，选出所有未被逻辑删除的视频-->
    </select>

    <!--最新推荐-->
    <select id="listLatestRecommands" resultType="VideoVO">
        SELECT
            b.id,
            b.title,
            b.video_source_id,
            b.cover,
            b.is_free,
            b.gmt_create,
            b.praiseNum,
            COUNT( ovpr.video_id ) AS playNum
        FROM
            (
            SELECT
                ov.*,
                COUNT( op.source_id ) AS praiseNum
            FROM
                outdoor_video ov
                LEFT JOIN outdoor_praise op ON ov.id = op.source_id
            WHERE
                ov.is_deleted = 0
            GROUP BY
                ov.id
            ) AS b
            LEFT JOIN outdoor_video_play_record ovpr ON b.id = ovpr.video_id
        GROUP BY
            b.id
        ORDER BY
            b.praiseNum DESC,
            playNum DESC
    </select>


    <select id="listUpAllVideos" parameterType="Long" resultType="VideoVO">
        SELECT
            ov.id,
            ov.title,
            ou.nickname,
            ou.avatar,
            ov.cover,
            ov.gmt_create
        FROM
            outdoor_video ov,
            outdoor_user ou
        WHERE
            ov.up_id = #{upId} AND ov.is_deleted=0 AND ov.up_id=ou.id ;
    </select>

    <select id="countFanNum" parameterType="Long" resultType="UpTotalDataVO">
        SELECT
            ou.`id`,
            COUNT( our.`up_id` ) AS fanNum
        FROM
            outdoor_user ou
            LEFT JOIN outdoor_user_relation our ON ou.`id` = our.`up_id`
        WHERE
            ou.`id` = #{id} AND our.`is_deleted`=0;<!--仅查询未被逻辑删除的用户关系-->
    </select>

    <select id="countFollowNum" parameterType="Long" resultType="UpTotalDataVO">
        SELECT
            ou.`id`,
            COUNT( our.`fan_id` ) AS followNum
        FROM
            outdoor_user ou
            LEFT JOIN outdoor_user_relation our ON ou.`id` = our.`fan_id`
        WHERE
            ou.`id` = #{id} AND our.`is_deleted`=0;<!--仅查询未被逻辑删除的用户关系-->
    </select>

    <select id="listVideosByCondition" parameterType="VideoQueryVo" resultType="VideoVO">
        SELECT
            ov.id,
            ov.title,
            ot.type_name,
            ou.nickname,
            ou.avatar,
            ov.cover,
            ov.gmt_create
        FROM
            outdoor_video ov,
            outdoor_type ot,
            outdoor_user ou
        WHERE
            ov.up_id = #{upId} AND ov.title LIKE CONCAT('%',#{titleKeyword},'%')
            AND ov.is_deleted = 0
            AND ov.up_id = ou.id
            AND ov.type_id = ot.id;
    </select>

    <select id="getVideoBySourceId" parameterType="String"  resultType="VideoPlayVO">
       SELECT
            ov.id,
            ov.title,
            ov.up_id,
            ov.description,
            ov.video_source_id,
            ov.cover,
            ov.is_free,
            ov.gmt_create,
            ot.type_name,
            ou.nickname,
            ou.avatar,
            ou.motto
        FROM
            outdoor_video ov,
            outdoor_type ot,
            outdoor_user ou
        WHERE
            ov.video_source_id = #{videoSourceId} AND ov.up_id=ou.id AND ov.type_id=ot.id ;
    </select>

</mapper>
